services:
  authentik:
    # Ensure the image is not pulled if present
    pull_policy: missing
    labels:
      # Websecure
      # Enable catchall domain handling for all services / tipi apps
      traefik.http.routers.authentik-falkheiland-insecure.rule: HostRegexp(`^.+\.${CATCHALL_DOMAIN}$`)
      traefik.http.routers.authentik-falkheiland-insecure.priority: 1
      traefik.http.routers.authentik-falkheiland.rule: HostRegexp(`^.+\.${CATCHALL_DOMAIN}$`)
      traefik.http.routers.authentik-falkheiland.priority: 1
      # Use the chain-Domain middleware for domain handling
      traefik.http.routers.authentik-falkheiland.middlewares: chain-Domain@file
      # Use the default certresolver
      traefik.http.routers.authentik-falkheiland.tls.certresolver: ''
  authentik-worker:
    # Ensure the image is not pulled if present
    pull_policy: missing

  authentik-db:
    # Ensure the image is not pulled if present
    pull_policy: missing
    networks:
      # This network is shared with the docker-db-backup app
      shared_docker-db-backup_network:
        gw_priority: 0

  authentik-redis:
    # Ensure the image is not pulled if present
    pull_policy: missing

networks:
  # This network is shared with the docker-db-backup app
  shared_docker-db-backup_network:
    external: true
