services:
  paperless-ngx:
    pull_policy: missing
    volumes:
      - ${APP_USER_DATA_DIR}/tipi/paperlessngx/media:/usr/src/paperless/media
      - ${APP_USER_DATA_DIR}/tipi/paperlessngx/export:/usr/src/paperless/export
      - ${APP_USER_DATA_DIR}/scan:/usr/src/paperless/consume
    environment:
      PAPERLESS_TIME_ZONE: Europe/Berlin
      PAPERLESS_OCR_LANGUAGE: deu+eng
      PAPERLESS_CONSUMER_POLLING: 300
      PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
      PAPERLESS_SOCIALACCOUNT_PROVIDERS: >
        {
          "openid_connect": {
            "APPS": [
              {
                "provider_id": "authentik",
                "name": "Authentik",
                "client_id": "${OAUTH2_CLIENT_ID}",
                "secret": "${OAUTH2_SECRET}",
                "settings": {
                  "server_url": "${OAUTH2_SERVER_URL}/application/o/paperless-ngx/.well-known/openid-configuration"
                }
              }
            ],
            "OAUTH_PKCE_ENABLED": "True"
          }
        }
      PAPERLESS_REDIRECT_LOGIN_TO_SSO: true
      PAPERLESS_DISABLE_REGULAR_LOGIN: true
    labels:
      # Websecure
      traefik.http.routers.paperless-ngx.middlewares: chain-Domain-auth@file
      traefik.http.routers.paperless-ngx.tls.certresolver: ''
      # WebSecure local IP
      traefik.http.routers.paperless-ngx-privip.rule: Host(`${APP_DOMAIN}`) && ClientIP(`${PRIVATE_IPV4}`)
      traefik.http.routers.paperless-ngx-privip.middlewares: chain-Domain@file
      traefik.http.routers.paperless-ngx-privip.entrypoints: websecure
      traefik.http.routers.paperless-ngx-privip.service: paperless-ngx
      traefik.http.routers.paperless-ngx-privip.priority: 100
      traefik.http.routers.paperless-ngx-privip.tls.certresolver: ''
      # WUD-FH
      wud.tag.include: '^\d+\.\d+\.\d+$$'
      wud.watch: true
      wud.link.template: https://github.com/paperless-ngx/paperless-ngx/releases/tag/v$${major}.$${minor}.$${patch}

  broker:
    pull_policy: missing
    labels:
      # WUD-FH
      wud.tag.include: '^\d+$$'
      wud.watch: false
      wud.watch.digest: true
      wud.display.name: paperless-ngx-broker
      wud.link.template: https://github.com/redis/redis/releases/tag/$${major}.$${minor}.$${patch}

  db:
    image: docker.io/library/postgres:15
    pull_policy: missing
    labels:
      # WUD-FH
      wud.tag.include: '^\d+$$'
      wud.watch: false
      wud.watch.digest: true
      wud.display.name: paperless-ngx-db
      wud.link.template: https://github.com/gotenberg/gotenberg/releases/tag/v$${major}.$${minor}.$${patch}

  gotenberg:
    image: gotenberg/gotenberg:8.16
    pull_policy: missing
    labels:
      # WUD-FH
      wud.tag.include: '^\d+\.\d+$$'
      wud.watch: true
      wud.display.name: paperless-ngx-gotenberg
      wud.link.template: https://github.com/gotenberg/gotenberg/releases/tag/v$${major}.$${minor}.$${patch}

  tika:
    pull_policy: missing
    labels:
      # WUD-FH
      wud.tag.include: '^latest$$'
      wud.watch: true
      wud.watch.digest: true
      wud.display.name: paperless-ngx-tika

  dbbackup:
    pull_policy: missing
    image: tiredofit/db-backup:4.1.9
    container_name: paperless-ngx-db-backup
    environment:
      - DEFAULT_COMPRESSION=GZ
      - DB01_TYPE=pgsql
      - DB01_HOST=db
      - DB01_NAME=paperless
      - DB01_USER=paperless
      - DB01_PASS=paperless
      - CONTAINER_ENABLE_MONITORING=FALSE
      - DEFAULT_CLEANUP_TIME=1440
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${APP_DATA_DIR}/data/db-backup:/backup
    depends_on:
      - db
    networks:
      - tipi_main_network
    labels:
      # WUD-FH
      wud.tag.include: '^\d+\.\d+\.\d+$$'
      wud.watch: true
      wud.link.template: https://github.com/tiredofit/docker-db-backup/releases/tag/$${major}.$${minor}.$${patch}
