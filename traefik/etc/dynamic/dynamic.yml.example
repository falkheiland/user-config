http:
  serversTransports:
    insecuretransport:
      insecureSkipVerify: true
  middlewares:
    redirectScheme-default:
      redirectScheme:
        scheme: https
        permanent: true
    # Note: when used in docker-compose.yml all dollar signs in the hash need to be doubled for escaping.
    # To create a user:password pair, the following command can be used:
    # echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g
    #
    # Also note that dollar signs should NOT be doubled when they not evaluated (e.g. Ansible docker_container module).
    basicAuth-default:
      basicAuth:
        users:
          - "tipi:$apr1$f.TtPDq.$KS4PGp7n5Nf8Q6hBuHf.h/"
    forwardauth-crowdsec-bouncer:
      forwardauth:
        address: http://crowdsec-bouncer-traefik:8080/api/v1/forwardAuth
        trustForwardHeader: true
    forwardAuth-authentik:
      forwardAuth:
        address: http://authentik:9000/outpost.goauthentik.io/auth/traefik
        trustForwardHeader: true
        authResponseHeaders:
          - X-authentik-username
          - X-authentik-groups
          - X-authentik-email
          - X-authentik-name
          - X-authentik-uid
          - X-authentik-jwt
          - X-authentik-meta-jwks
          - X-authentik-meta-outpost
          - X-authentik-meta-provider
          - X-authentik-meta-app
          - X-authentik-meta-version
    plugin-geoblock:
      plugin:
        traefik-plugin-geoblock:
          # Enable this plugin?
          enabled: true
          # Path to ip2location database file
          databaseFilePath: /plugins-local/src/github.com/nscuro/traefik-plugin-geoblock/IP2LOCATION-LITE-DB1.IPV6.BIN
          # Whitelist of countries to allow (ISO 3166-1 alpha-2)
          allowedCountries: [ "DE" ]
          # Blocklist of countries to block (ISO 3166-1 alpha-2)
          # blockedCountries: [ "RU" ]
          # Default allow indicates that if an IP is in neither block list nor allow lists, it should be allowed.
          defaultAllow: false
          # Allow requests from private / internal networks?
          allowPrivate: true
          # HTTP status code to return for disallowed requests (default: 403)
          disallowedStatusCode: 204
          # Add CIDR to be whitelisted, even if in a non-allowed country
          # allowedIPBlocks: ["66.249.64.0/19"]
          # Add CIDR to be blacklisted, even if in an allowed country or IP block
          # blockedIPBlocks: ["66.249.64.5/32"]
    ipAllowList-local:
      ipAllowList:
        sourceRange:
          - "192.168.1.0/24"
    ipAllowList-none:
      ipAllowList:
        sourceRange:
          - "192.168.1.1/32"
        ipStrategy:
          excludedIPs:
            - "192.168.1.1/32"

  routers:
    device01:
      entryPoints:
        - "web"
      rule: "Host(`device01.example.com`)"
      middlewares:
        - redirectScheme-default@file
      service: device01
    device01secure:
      entryPoints:
        - "websecure"
      rule: "Host(`device01.example.com`)"
      middlewares:
        - plugin-geoblock@file
        - forwardAuth-authentik@file
      tls:
        options: sniStrictFalse@file
        certresolver: myresolver
      service: device01

  services:
    device01:
      loadBalancer:
        serversTransport: insecuretransport
        servers:
          - url: "https://192.168.1.100"
        passHostHeader: true

tls:
  options:
    default:
      minVersion: VersionTLS13
      cipherSuites:
        - TLS_AES_128_GCM_SHA256
        - TLS_AES_256_GCM_SHA384
        - TLS_CHACHA20_POLY1305_SHA256
      curvePreferences:
        - CurveP521
        - CurveP384
      sniStrict: true
    sniStrictFalse:
      minVersion: VersionTLS13
      cipherSuites:
        - TLS_AES_128_GCM_SHA256
        - TLS_AES_256_GCM_SHA384
        - TLS_CHACHA20_POLY1305_SHA256
      curvePreferences:
        - CurveP521
        - CurveP384
      sniStrict: false
  certificates:
    - certFile: /etc/traefik/tls/cert.pem
      keyFile: /etc/traefik/tls/key.pem
